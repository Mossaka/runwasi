name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    name: ${{ matrix.runtime }}
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
        runtime: ["common", "wasmedge", "wasmtime", "wasmer"]
    uses: ./.github/workflows/action-fmt.yml
    with:
      os: ${{ matrix.os }}
      runtime: ${{ matrix.runtime }}
  
  test-image:
    name: ${{ matrix.runtime }}
    strategy:
      matrix:
        runtime: ["common"] # not required, but groups jobs
    uses: ./.github/workflows/action-test-image.yml

  build-ubuntu:
    name: ${{ matrix.runtime }}
    strategy:
      matrix:
        os: ["ubuntu-20.04", "ubuntu-22.04"]
        runtime: ["common", "wasmtime", "wasmedge", "wasmer"]
    uses: ./.github/workflows/action-build.yml
    with:
      os: ${{ matrix.os }}
      runtime: ${{ matrix.runtime }}

  build-windows:
    name: ${{ matrix.runtime }}
    strategy:
      matrix:
        os: ["windows-latest"]
        runtime: ["common", "wasmtime", "wasmedge", "wasmer"]
    uses: ./.github/workflows/action-build.yml
    with:
      os: ${{ matrix.os }}
      runtime: ${{ matrix.runtime }}

  smoke-tests:
    name: ${{ matrix.runtime }}
    needs: [build-ubuntu, test-image]
    strategy:
      matrix:
        # 20.04 uses cgroupv1, 22.04 uses cgroupv2
        os: ["ubuntu-20.04", "ubuntu-22.04"]
        runtime:  ["wasmtime", "wasmedge", "wasmer"]
    uses: ./.github/workflows/action-test-smoke.yml
    with:
      os: ${{ matrix.os }}
      runtime: ${{ matrix.runtime }}

  e2e-wasmtime:
    name: ${{ matrix.runtime }}
    needs: [build-ubuntu, test-image]
    strategy:
      matrix:
        # 20.04 uses cgroupv1, 22.04 uses cgroupv2
        os: ["ubuntu-20.04", "ubuntu-22.04"]
        runtime:  ["wasmtime"]
    uses: ./.github/workflows/action-test-kind.yml
    with:
      os: ${{ matrix.os }}
      runtime: ${{ matrix.runtime }}
      
  e2e-k3s:
    name: ${{ matrix.runtime }}
    needs: [build-ubuntu, test-image]
    strategy:
      matrix:
        os: ["ubuntu-20.04", "ubuntu-22.04"]
        runtime: ["wasmedge", "wasmer"]
    uses: ./.github/workflows/action-test-k3s.yml
    with:
      os: ${{ matrix.os }}
      runtime: ${{ matrix.runtime }}

  build-all-features-containerd-shim-wasm:
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Setup build env
        run: ./scripts/setup-linux.sh
        shell: bash
      - name: install cargo-all-features
        run: cargo install cargo-all-features
      - name: Build containerd-shim-wasm for each feature
        run: cd crates/containerd-shim-wasm && cargo build-all-features